{"version":3,"sources":["components/Header.jsx","api/axiosConfig.js","api/taskApi.js","features/home/homeSlice.js","features/home/components/Add.jsx","features/home/components/FormAdd.jsx","features/home/components/EmptyTask.jsx","features/home/components/TaskItem.jsx","features/home/components/ListTask.jsx","features/home/components/Search.jsx","features/home/components/Sort.jsx","features/home/index.jsx","App.js","app/store.js","index.js"],"names":["Header","className","axiosInstance","axios","create","baseURL","headers","contentType","TaskApi","get","response","status","success","statusText","listTask","data","id","delete","taskDeleted","task","post","type","taskNew","title","level","put","console","log","addTaskAsync","createAsyncThunk","a","editTask","addTask","getListTaskAsync","params","getListTask","result","deleteTaskAsync","deleteTask","homeSlice","createSlice","name","initialState","isShowForm","orderBy","orderDir","isLoading","strSearch","taskSelected","reducers","toggleForm","state","closeForm","openForm","searchAction","action","payload","orderAction","setTaskSelected","extraReducers","builder","addCase","fulfilled","push","newListTask","map","pending","filter","reducer","actions","Add","props","dispatch","useDispatch","onClick","FormAdd","useState","setIsLoading","useSelector","home","useForm","defaultValues","register","handleSubmit","errors","formState","reset","setValue","React","useEffect","onSubmit","newTask","then","res","NotificationManager","handleCancel","error","color","placeholder","required","style","border","value","width","marginBottom","EmptyTask","colSpan","TaskItem","index","LEVEL","levelInfo","find","levelItem","renderLevel","handleEditTask","window","confirm","handleDelete","defaultProps","ListTask","listTaskSearch","toLowerCase","includes","listTaskSort","orderByFunction","length","Search","setStrSearch","debounceSearch","debounce","cancel","onChange","event","target","Sort","handleOrderClick","data-toggle","aria-labelledby","href","role","textTransform","Home","App","store","configureStore","homeReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46cb26a6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"page-header\" >\r\n            <h1>Project Todolist <small>ReactJs</small></h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n\tbaseURL: \"https://607e7c4b02a23c0017e8b5de.mockapi.io/\",\r\n\theaders: {\r\n\t\tcontentType: \"application/json\"\r\n\t},\r\n});\r\n\r\nexport default axiosInstance;\r\n","import axiosInstance from \"./axiosConfig\";\r\n\r\nclass TaskApi {\r\n\tstatic async getListTask() {\r\n\t\tconst response = await axiosInstance.get(\"listTask\");\r\n\t\tif (response.status === 200) {\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: true,\r\n\t\t\t\tstatusText: response.statusText,\r\n\t\t\t\tlistTask: response.data,\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tsuccess: false,\r\n\t\t\tstatusText: response.statusText,\r\n\t\t};\r\n\t}\r\n\r\n\tstatic async deleteTask(id) {\r\n\t\tconst response = await axiosInstance.delete(`listTask/${id}`);\r\n\t\tif (response.status === 200) {\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: true,\r\n\t\t\t\tstatusText: response.statusText,\r\n\t\t\t\ttaskDeleted: response.data,\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tsuccess: false,\r\n\t\t\tstatusText: response.statusText,\r\n\t\t};\r\n\t}\r\n\r\n\tstatic async addTask(task) {\r\n\t\tconst response = await axiosInstance.post(\"listTask\", task);\r\n\t\tif (response.status === 201) {\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: true,\r\n\t\t\t\ttype: \"add\",\r\n\t\t\t\tstatusText: response.statusText,\r\n\t\t\t\ttaskNew: response.data,\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tsuccess: false,\r\n\t\t\tstatusText: response.statusText,\r\n\t\t};\r\n\t}\r\n\r\n\tstatic async editTask(task) {\r\n\t\tconst { id, title, level } = task;\r\n\t\tconst response = await axiosInstance.put(`listTask/${id}`, { title, level });\r\n\t\tconsole.log(response);\r\n\t\tif (response.status === 200) {\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: true,\r\n\t\t\t\ttype: \"edit\",\r\n\t\t\t\tstatusText: response.statusText,\r\n\t\t\t\ttaskNew: response.data,\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tsuccess: false,\r\n\t\t\tstatusText: response.statusText,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport default TaskApi;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport TaskApi from \"../../api/taskApi\";\r\nexport const addTaskAsync = createAsyncThunk(\"home/add\", async (task) => {\r\n\tif (task.id) {\r\n\t\treturn await TaskApi.editTask(task);\r\n\t}\r\n\treturn await TaskApi.addTask(task);\r\n});\r\n\r\nexport const getListTaskAsync = createAsyncThunk(\"home\", async (params) => {\r\n\tconst result = await TaskApi.getListTask();\r\n\treturn result;\r\n});\r\n\r\nexport const deleteTaskAsync = createAsyncThunk(\"home/delete\", async (params) => {\r\n\tconst { id } = params;\r\n\tconst result = await TaskApi.deleteTask(id);\r\n\treturn result;\r\n});\r\n\r\nconst initialState = {\r\n\tisShowForm: false,\r\n\tlistTask: [],\r\n\torderBy: \"title\",\r\n\torderDir: \"asc\",\r\n\tisLoading: false,\r\n\tstrSearch: \"\",\r\n\ttaskSelected: null,\r\n};\r\n\r\nconst homeSlice = createSlice({\r\n\tname: \"home\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\ttoggleForm: (state) => {\r\n\t\t\tstate.isShowForm = !state.isShowForm;\r\n\t\t},\r\n\t\tcloseForm: (state) => {\r\n\t\t\tstate.isShowForm = false;\r\n\t\t},\r\n\t\topenForm: (state) => {\r\n\t\t\tstate.isShowForm = true;\r\n\t\t},\r\n\t\tsearchAction: (state, action) => {\r\n\t\t\tstate.strSearch = action.payload;\r\n\t\t},\r\n\t\torderAction: (state, action) => {\r\n\t\t\tstate.orderBy = action.payload.orderBy;\r\n\t\t\tstate.orderDir = action.payload.orderDir;\r\n\t\t},\r\n\t\tsetTaskSelected: (state, action) => {\r\n\t\t\tstate.taskSelected = action.payload;\r\n\t\t},\r\n\t},\r\n\textraReducers: (builder) => {\r\n\t\tbuilder\r\n\t\t\t.addCase(addTaskAsync.fulfilled, (state, action) => {\r\n\t\t\t\tconst { success, taskNew, type } = action.payload;\r\n\t\t\t\tconsole.log(action.payload);\r\n\t\t\t\tif (success && type === \"add\") {\r\n\t\t\t\t\tstate.listTask.push(taskNew);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst newListTask = state.listTask.map((task) => {\r\n\t\t\t\t\t\treturn task.id === taskNew.id ? taskNew : task;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tstate.listTask = newListTask;\r\n\t\t\t\t\tstate.taskSelected = null;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.addCase(getListTaskAsync.pending, (state) => {\r\n\t\t\t\tstate.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(getListTaskAsync.fulfilled, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n\t\t\t\tconst { listTask, success } = action.payload;\r\n\t\t\t\tif (success) {\r\n\t\t\t\t\tstate.listTask = listTask;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstate.listTask = [];\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.addCase(deleteTaskAsync.pending, (state) => {\r\n\t\t\t\tstate.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(deleteTaskAsync.fulfilled, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n\t\t\t\tconst { taskDeleted, success } = action.payload;\r\n\t\t\t\tif (success) {\r\n\t\t\t\t\tconst newListTask = state.listTask.filter((task) => task.id !== taskDeleted.id);\r\n\t\t\t\t\tstate.listTask = newListTask;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t},\r\n});\r\n\r\nconst { reducer, actions } = homeSlice;\r\n\r\nexport const { toggleForm, closeForm, openForm, searchAction, orderAction, setTaskSelected } =\r\n\tactions;\r\n\r\nexport default reducer;","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleForm } from \"../homeSlice\";\r\nfunction Add(props) {\r\n\tconst dispatch = useDispatch();\r\n\tconst handleToggleForm = () => {\r\n\t\tconst action = toggleForm();\r\n\t\tdispatch(action);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"col-xs-5 col-sm-5 col-md-5 col-lg-5\">\r\n\t\t\t<button type=\"button\" className=\"btn btn-info btn-block\" onClick={handleToggleForm}>\r\n\t\t\t\tAdd Task\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Add;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\r\nimport { addTaskAsync, closeForm } from \"../homeSlice\";\r\n\r\nfunction FormAdd() {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst taskSelected = useSelector((state) => state.home.taskSelected);\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { errors },\r\n\t\treset,\r\n\t\tsetValue,\r\n\t} = useForm({\r\n\t\tdefaultValues: {\r\n\t\t\ttitle: \"\",\r\n\t\t\tlevel: 0,\r\n\t\t},\r\n\t});\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (taskSelected) {\r\n\t\t\tsetValue(\"title\", taskSelected.title);\r\n\t\t\tsetValue(\"level\", taskSelected.level);\r\n\t\t}\r\n\t}, [taskSelected, setValue]);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onSubmit = async (data) => {\r\n\t\tsetIsLoading(true);\r\n\t\tvar newTask = {\r\n\t\t\tid: null,\r\n\t\t\ttitle: data.title,\r\n\t\t\tlevel: +data.level,\r\n\t\t};\r\n\t\tif (taskSelected) {\r\n\t\t\tnewTask.id = taskSelected.id;\r\n\t\t}\r\n\t\tconst action = addTaskAsync(newTask);\r\n\t\tconst response = dispatch(action);\r\n\t\tresponse.then((res) => {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tconst { payload } = res;\r\n\t\t\tif (payload.success) {\r\n\t\t\t\tNotificationManager.success(payload.statusText, \"Success\");\r\n\t\t\t\thandleCancel();\r\n\t\t\t} else {\r\n\t\t\t\tNotificationManager.error(payload.statusText, \"Error\");\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleCancel = () => {\r\n\t\treset();\r\n\t\tconst action = closeForm();\r\n\t\tdispatch(action);\r\n\t};\r\n\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<div className=\"col-md-offset-7 col-md-5\">\r\n\t\t\t\t<ScaleLoader color={\"#5bc0de\"} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"col-md-offset-7 col-md-5\">\r\n\t\t\t<form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label className=\"sr-only\">label</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tplaceholder=\"Task Name\"\r\n\t\t\t\t\t\t{...register(\"title\", { required: true })}\r\n\t\t\t\t\t\tstyle={errors.title && { border: \"1px solid red\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label className=\"sr-only\">label</label>\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tname=\"ds\"\r\n\t\t\t\t\t\tid=\"inputDs\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t{...register(\"level\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSmall\r\n\t\t\t\t\t\t<option value={0}>Normal</option>\r\n\t\t\t\t\t\t<option value={1}>Medium</option>\r\n\t\t\t\t\t\t<option value={2}>High</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button\r\n\t\t\t\t\tstyle={{ width: \"100%\", marginBottom: \"10px\" }}\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\tonClick={handleCancel}\r\n\t\t\t\t>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FormAdd;\r\n","import React from \"react\";\r\n\r\nfunction EmptyTask(props) {\r\n\tconst { strSearch } = props;\r\n\r\n\tif (!strSearch) {\r\n\t\treturn (\r\n\t\t\t<tr>\r\n\t\t\t\t<td className=\"text-center\" colSpan=\"4\">\r\n\t\t\t\t\tAdd your task to begin\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td className=\"text-center\" colSpan=\"4\">\r\n\t\t\t\tDoesn't find any task match your search\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n}\r\n\r\nexport default EmptyTask;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteTaskAsync, setTaskSelected, openForm } from \"../homeSlice\";\r\n\r\nTaskItem.propTypes = {\r\n\ttask: PropTypes.object,\r\n\tindex: PropTypes.number,\r\n};\r\n\r\nTaskItem.defaultProps = {\r\n\ttask: null,\r\n\tindex: 0,\r\n};\r\n\r\nfunction TaskItem(props) {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst { task, index } = props;\r\n\r\n\tconst LEVEL = [\r\n\t\t{\r\n\t\t\tid: 0,\r\n\t\t\tname: \"Normal\",\r\n\t\t\tclassName: \"label-primary\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tname: \"Medium\",\r\n\t\t\tclassName: \"label-warning\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tname: \"High\",\r\n\t\t\tclassName: \"label-danger\",\r\n\t\t},\r\n\t];\r\n\r\n\tconst renderLevel = (level) => {\r\n\t\tconst levelInfo = LEVEL.find((levelItem) => levelItem.id === level);\r\n\t\treturn (\r\n\t\t\t<td className=\"text-center\">\r\n\t\t\t\t<span className={`label ${levelInfo.className}`}>{levelInfo.name}</span>\r\n\t\t\t</td>\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleDelete = (task) => {\r\n\t\tconst confirmation = window.confirm(\"Are you sure you want to delete this task?\");\r\n\t\tif (confirmation) {\r\n\t\t\tdispatch(deleteTaskAsync(task));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleEditTask = (task) => {\r\n\t\tdispatch(setTaskSelected(task));\r\n\t\tdispatch(openForm());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td className=\"text-center\">{index}</td>\r\n\t\t\t<td>{task.title}</td>\r\n\t\t\t{renderLevel(task.level)}\r\n\t\t\t<td>\r\n\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => handleEditTask(task)}>\r\n\t\t\t\t\tEdit\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => handleDelete(task)}>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n}\r\n\r\nexport default TaskItem;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport { getListTaskAsync } from \"../homeSlice\";\r\nimport EmptyTask from \"./EmptyTask\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport { orderBy as orderByFunction } from \"lodash\";\r\nfunction ListTask(props) {\r\n\tconst orderBy = useSelector((state) => state.home.orderBy);\r\n\r\n\tconst orderDir = useSelector((state) => state.home.orderDir);\r\n\r\n\tconst isLoading = useSelector((state) => state.home.isLoading);\r\n\r\n\tconst listTask = useSelector((state) => state.home.listTask);\r\n\r\n\tconst strSearch = useSelector((state) => state.home.strSearch);\r\n\r\n\tconst listTaskOriginal = listTask ? [...listTask] : [];\r\n\r\n\tconst listTaskSearch = listTaskOriginal.filter((task) =>\r\n\t\ttask.title.toLowerCase().includes(strSearch),\r\n\t);\r\n\r\n\tconst listTaskSort = orderByFunction(listTaskSearch, [orderBy], [orderDir]);\r\n\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst getListTask = async () => {\r\n\t\t\tdispatch(getListTaskAsync());\r\n\t\t};\r\n\t\tgetListTask();\r\n\t}, [dispatch]);\r\n\r\n\tconst renderTaskItem = () => {\r\n\t\tif (isLoading) {\r\n\t\t\treturn (\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td colSpan=\"4\">\r\n\t\t\t\t\t\t<BeatLoader color={\"#5bc0de\"} />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (listTaskSort.length > 0) {\r\n\t\t\treturn listTaskSort.map((task, index) => {\r\n\t\t\t\treturn <TaskItem key={task.id} index={++index} task={task} />;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn <EmptyTask strSearch={strSearch} />;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"panel panel-success\">\r\n\t\t\t<div className=\"panel-heading\">List Task</div>\r\n\t\t\t<table className=\"table table-hover \">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style={{ width: \"10%\" }} className=\"text-center\">\r\n\t\t\t\t\t\t\t#\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<th>Task</th>\r\n\t\t\t\t\t\t<th style={{ width: \"20%\" }} className=\"text-center\">\r\n\t\t\t\t\t\t\tLevel\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<th style={{ width: \"20%\" }}>Action</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>{renderTaskItem()}</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ListTask;\r\n","import debounce from \"lodash.debounce\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { searchAction } from \"../homeSlice\";\r\n\r\nfunction Search() {\r\n\tconst [strSearch, setStrSearch] = React.useState(\"\");\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetStrSearch(e.target.value);\r\n\t};\r\n\r\n\tconst handleSearch = () => {\r\n\t\tconst action = searchAction(strSearch);\r\n\t\tdispatch(action);\r\n\t};\r\n\r\n\tconst debounceSearch = debounce(handleSearch, 300);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tdebounceSearch();\r\n\r\n\t\treturn debounceSearch.cancel;\r\n\t}, [strSearch, debounceSearch]);\r\n\r\n\treturn (\r\n\t\t<div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n\t\t\t<div className=\"input-group\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tplaceholder=\"Search for...\"\r\n\t\t\t\t\tonChange={(event) => handleChange(event)}\r\n\t\t\t\t\tvalue={strSearch}\r\n\t\t\t\t/>\r\n\t\t\t\t<span className=\"input-group-btn\">\r\n\t\t\t\t\t<button className=\"btn btn-info\" type=\"button\">\r\n\t\t\t\t\t\tGo!\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { orderAction } from \"../homeSlice\";\r\n\r\nfunction Sort(props) {\r\n\tconst orderBy = useSelector((state) => state.home.orderBy);\r\n\tconst orderDir = useSelector((state) => state.home.orderDir);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleOrderClick = (orderBy, orderDir) => {\r\n\t\tconsole.log(orderBy, orderDir);\r\n\t\tconst action = orderAction({ orderBy, orderDir });\r\n\t\tdispatch(action);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-default dropdown-toggle\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tid=\"dropdownMenu1\"\r\n\t\t\t\t\tdata-toggle=\"dropdown\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSort by <span className=\"caret\" />\r\n\t\t\t\t</button>\r\n\t\t\t\t<ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a href=\"/#\" role=\"button\" onClick={() => handleOrderClick(\"title\", \"asc\")}>\r\n\t\t\t\t\t\t\tTitle ASC\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a href=\"/#\" role=\"button\" onClick={() => handleOrderClick(\"title\", \"desc\")}>\r\n\t\t\t\t\t\t\tTitle DESC\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li role=\"separator\" className=\"divider\" />\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a href=\"/#\" role=\"button\" onClick={() => handleOrderClick(\"level\", \"asc\")}>\r\n\t\t\t\t\t\t\tLevel ASC\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a href=\"/#\" role=\"button\" onClick={() => handleOrderClick(\"level\", \"desc\")}>\r\n\t\t\t\t\t\t\tLevel DESC\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{ textTransform: \"uppercase\" }}\r\n\t\t\t\t\tclassName=\"label label-success label-medium\"\r\n\t\t\t\t>{`${orderBy} - ${orderDir}`}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Sort;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Add from \"./components/Add.jsx\";\r\nimport FormAdd from \"./components/FormAdd.jsx\";\r\nimport ListTask from \"./components/ListTask.jsx\";\r\nimport Search from \"./components/Search.jsx\";\r\nimport Sort from \"./components/Sort.jsx\";\r\n\r\nfunction Home() {\r\n\tconst isShowForm = useSelector((state) => state.home.isShowForm);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<Search />\r\n\t\t\t\t<Sort />\r\n\t\t\t\t<Add />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">{isShowForm ? <FormAdd /> : <></>}</div>\r\n\t\t\t<ListTask />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport NotificationContainer from \"react-notifications/lib/NotificationContainer\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Home from \"./features/home\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header/>\n\t\t\t<NotificationContainer />\n\t\t\t<Home />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport homeReducer from \"../features/home/homeSlice\";\n\nexport const store = configureStore({\n\treducer: {\n\t\thome: homeReducer,\n\t},\n});\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport { store } from \"./app/store\";\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\"),\r\n);\r\n\r\n"],"sourceRoot":""}